const { SlashCommandBuilder, ChannelType, ModalBuilder, TextInputBuilder, TextInputStyle, ActionRowBuilder, EmbedBuilder, ButtonBuilder, ButtonStyle, PermissionsBitField, WebhookClient } = require("discord.js");
const Embed = require("@coreModels/Embed");
require("dotenv").config();

module.exports = {
  data: new SlashCommandBuilder()
    .setName("embed")
    .setDescription("Perintah untuk membuat berbagai hal")
    .addSubcommand((subcommand) =>
      subcommand
        .setName("create")
        .setDescription("Buat embed (bisa tombol link dan fields)")
        .addChannelOption((option) =>
          option.setName("channel")
            .setDescription("Channel tujuan embed")
            .setRequired(true)
            .addChannelTypes(ChannelType.GuildText)
        )
      // .addStringOption((option) =>
      //   option.setName("color")
      //     .setDescription("Warna embed (hex code atau nama warna)")
      //     .setRequired(false)
      // )
    )
    .addSubcommand((subcommand) =>
      subcommand
        .setName("delete")
        .setDescription("Hapus embed react role")
        .addStringOption((option) =>
          option.setName("message_id")
            .setDescription("ID pesan embed react role yang ingin dihapus")
            .setRequired(true)
        )
    )
    .addSubcommandGroup((group) =>
      group
        .setName("role")
        .setDescription("Buat embed dengan button yang memberikan role saat direact.")
        .addSubcommand((subcommand) =>
          subcommand
            .setName("create")
            .setDescription("Buat embed dengan tombol role reaction")
            .addChannelOption((option) =>
              option.setName("channel")
                .setDescription("Channel tujuan embed")
                .setRequired(true)
                .addChannelTypes(ChannelType.GuildText)
            )
          // .addStringOption((option) =>
          //   option.setName("color")
          //     .setDescription("Warna embed (hex code atau nama warna)")
          //     .setRequired(false)
          // )
        )
    ),
  adminOnly: true,

  async execute(interaction) {
    // if (!interaction.guild) {
    //   return interaction.reply({
    //     content: "🚫 | This command can't use here😭",
    //     ephemeral: true,
    //   });
    // }
    const channel = interaction.options.getChannel("channel", false); // false = tidak error kalo gak ada
    const guild = channel?.guild ?? interaction.guild;

    if (!guild) {
      return interaction.reply({
        content: "🚫 | Gagal mendapatkan server target. Pastikan command ini dijalankan dalam konteks guild.",
        ephemeral: true,
      });
    }

    const group = interaction.options.getSubcommandGroup(false);
    const subcommand = interaction.options.getSubcommand();

    try {
      switch (group) {
        case "role": {
          if (subcommand === "create") {
            if (!interaction.memberPermissions.has(PermissionsBitField.Flags.ManageRoles)) {
              return interaction.reply({
                content: "❌ Kamu butuh izin **Manage Roles**!",
                ephemeral: true
              });
            }

            // const color = interaction.options.getString("color") || "Blue";

            // Buat modal untuk input embed
            const modal = new ModalBuilder()
              // .setCustomId(`embedRoleModal_${channel.id}_${color}`)
              // .setCustomId(`embedrole|${channel.id}|${color}`)
              .setCustomId(`embedrole|${channel.id}`)
              .setTitle("Buat Embed Role");

            // Komponen input untuk modal
            const titleInput = new TextInputBuilder()
              .setCustomId("titleInput")
              .setLabel("Judul Embed")
              .setStyle(TextInputStyle.Short)
              .setRequired(true);

            const descInput = new TextInputBuilder()
              .setCustomId("descInput")
              .setLabel("Deskripsi Embed")
              .setStyle(TextInputStyle.Paragraph)
              .setRequired(true);

            const buttonsInput = new TextInputBuilder()
              .setCustomId("buttonsInput")
              .setLabel("Tombol (Label|RoleID|Style)")
              .setStyle(TextInputStyle.Paragraph)
              .setRequired(true)
              .setPlaceholder("Contoh: Umum|123456789012345678|Primary~~Premium|987654321098765432|Success");

            const colorInput = new TextInputBuilder()
              .setCustomId("colorInput")
              .setLabel("Warna embed (hex code atau nama warna)")
              .setStyle(TextInputStyle.Short)
              .setRequired(true)
              .setPlaceholder("Contoh: Blue, Red, #0077FF");

            // Tambahkan komponen ke modal
            modal.addComponents(
              new ActionRowBuilder().addComponents(titleInput),
              new ActionRowBuilder().addComponents(descInput),
              new ActionRowBuilder().addComponents(buttonsInput),
              new ActionRowBuilder().addComponents(colorInput)
            );

            return interaction.showModal(modal);
          }
          break;
        }
        default: {
          if (subcommand === "create") {
            if (!interaction.memberPermissions.has(PermissionsBitField.Flags.ManageRoles)) {
              return interaction.reply({
                content: "❌ Kamu butuh izin **Manage Roles**!",
                ephemeral: true
              });
            }

            const channel = interaction.options.getChannel("channel");
            // const color = interaction.options.getString("color") || "Blue";

            // Buat modal untuk input embed
            const modal = new ModalBuilder()
              // .setCustomId(`embedCreateModal_${channel.id}_${color}`)
              // .setCustomId(`embedcreate|${channel.id}|${color}`)
              .setCustomId(`embedcreate|${channel.id}`)
              .setTitle("Buat Embed");

            // Komponen input untuk modal
            const titleInput = new TextInputBuilder()
              .setCustomId("titleInput")
              .setLabel("Judul Embed")
              .setStyle(TextInputStyle.Short)
              .setRequired(true);

            const descInput = new TextInputBuilder()
              .setCustomId("descInput")
              .setLabel("Deskripsi Embed")
              .setStyle(TextInputStyle.Paragraph)
              .setRequired(true);

            const buttonsInput = new TextInputBuilder()
              .setCustomId("buttonsInput")
              .setLabel("Tombol Link (Label|URL)")
              .setStyle(TextInputStyle.Paragraph)
              .setRequired(false)
              .setPlaceholder("Contoh: Website|https://example.com~~Discord|https://discord.gg/invite");

            const fieldsInput = new TextInputBuilder()
              .setCustomId("fieldsInput")
              .setLabel("Fields (Judul|Value)")
              .setStyle(TextInputStyle.Paragraph)
              .setRequired(false)
              .setPlaceholder("Contoh: Aturan|Dilarang spam~~FAQ|Silakan baca pinned");

            const colorInput = new TextInputBuilder()
              .setCustomId("colorInput")
              .setLabel("Warna embed (hex code atau nama warna)")
              .setStyle(TextInputStyle.Short)
              .setRequired(true)
              .setPlaceholder("Contoh: Blue, Red, #0077FF");

            const imageInput = new TextInputBuilder()
              .setCustomId("imageInput")
              .setLabel("URL Gambar")
              .setStyle(TextInputStyle.Short)
              .setRequired(false);

            // Tambahkan komponen ke modal
            modal.addComponents(
              new ActionRowBuilder().addComponents(titleInput),
              new ActionRowBuilder().addComponents(descInput),
              new ActionRowBuilder().addComponents(buttonsInput),
              new ActionRowBuilder().addComponents(fieldsInput),
              new ActionRowBuilder().addComponents(colorInput),
              new ActionRowBuilder().addComponents(imageInput),
            );

            return interaction.showModal(modal);
          } else if (subcommand === "delete") {
            // Tetap sama dengan kode delete sebelumnya
            await interaction.deferReply();
            const messageId = interaction.options.getString("message_id");

            // ... (kode delete yang sama)
            if (!messageId) {
              return interaction.editReply({ content: "❌ Mohon berikan ID embed yang ingin dihapus." });
            }

            // Cari embed di database
            const reactEmbed = await Embed.getCache({ messageId: messageId });

            if (!reactEmbed) {
              return interaction.editReply({ content: `❌ Embed dengan ID \`${messageId}\` tidak ditemukan di database.` });
            }

            let deletedMessage = false;

            try {
              const channel = await guild.channels.fetch(reactEmbed.channelId).catch(() => null);

              if (channel) {
                const msg = await channel.messages.fetch(messageId).catch(() => null);
                if (msg) {
                  await msg.delete();
                  deletedMessage = true;
                }
              }
            } catch (err) {
              console.error(`Gagal hapus pesan embed:`, err);
              // lanjut aja, mungkin pesan emang udah kehapus
            }

            try {
              await reactEmbed.destroy();
            } catch (err) {
              console.error(`Gagal hapus data embed dari database:`, err);
              return interaction.editReply({ content: "❌ Gagal menghapus data embed dari database!" });
            }

            return interaction.editReply({
              content: `✅ Embed dengan ID \`${messageId}\` berhasil dihapus${deletedMessage ? " (pesan di channel juga dihapus)" : ""}.`,
            });
          }
          break;
        }
      }
    } catch (error) {
      console.error("Error during /embed command execution:", error);
      // Send DM to owner about the error
      const webhookClient = new WebhookClient({ url: kythia.api.webhookErrorLogs });

      const errorEmbed = new EmbedBuilder().setColor("Red").setTitle(`> ❌ Error command /embed`).setDescription(`\`\`\`${error}\`\`\``).setFooter({ text: `Error dari server ${guild?.name || "Unknown"}` }).setTimestamp();

      // Kirim ke webhook
      webhookClient
        .send({
          embeds: [errorEmbed],
        })
        .catch(console.error);
      // Only reply if not already replied
      return interaction.editReply({ content: "❌ | Terjadi kesalahan saat menjalankan perintah ini. Silakan coba lagi." });
    }
  },
};