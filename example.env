# ===================================================================
#      APPLICATION ENVIRONMENT CONFIGURATION (.env.example)
# ===================================================================
#
# INSTRUCTIONS:
# 1. Create a copy of this file and rename it to '.env'.
# 2. Fill in all the necessary values according to your setup.
# 3. This '.env' file is HIGHLY CONFIDENTIAL and should not be committed to version control!
#

# ===================================================================
# I. GENERAL SETTINGS
# ===================================================================

# The `env` (environment) variable is now set directly inside `kythia.config.js`.
# No need to set it here.

# [Optional] Sentry DSN for advanced error logging.
# You can get it from: https://sentry.io/
SENTRY_DSN=

# ===================================================================
# II. DISCORD BOT CORE SETTINGS
# Get these from the Discord Developer Portal: https://discord.com/developers/applications
# ===================================================================

# [REQUIRED] Your bot's unique token. KEEP IT SECRET!
DISCORD_BOT_TOKEN=

# [REQUIRED] Your application/bot's public client ID.
DISCORD_BOT_CLIENT_ID=

# [REQUIRED] Your application/bot's client secret. Required for features like OAuth2.
DISCORD_BOT_CLIENT_SECRET=

# ===================================================================
# III. DATABASE CONFIGURATION
# ===================================================================

# --- Step 1: Install the Correct NPM Driver ---
# Choose one driver from the table below and run its installation command.
#
# +-----------+------------------------------------+
# | DB_DRIVER | Required NPM Command               |
# +-----------+------------------------------------+
# | mysql     | npm install mysql2                 |
# | postgres  | npm install pg pg-hstore           |
# | sqlite    | npm install sqlite3                |
# | mariadb   | npm install mariadb                |
# | mssql     | npm install tedious                |
# | db2       | npm install ibm_db                 |
# | snowflake | npm install snowflake-sdk          |
# | oracle    | npm install oracledb               |
# +-----------+------------------------------------+

# --- Step 2: Configure Your Connection Details ---

# [REQUIRED] Fill with the dialect/driver from the table above.
DB_DRIVER=mysql

# [REQUIRED] The hostname or IP address of your database server.
DB_HOST=localhost

# [REQUIRED] The port your database server is listening on.
# Default: MySQL/MariaDB=3306, PostgreSQL=5432
DB_PORT=3306

# [REQUIRED] The name of the database you want to connect to.
DB_NAME=kythia

# [REQUIRED] The username for database authentication.
DB_USER=root

# [REQUIRED] The password for database authentication.
DB_PASSWORD=

# --- Step 3: Optional & Driver-Specific Settings ---

# [Optional] For 'sqlite' only: The file path where the SQLite database will be stored.
# DB_STORAGE_PATH=db/database.sqlite

# [Optional] For 'mysql' & 'mariadb': Use this for connecting via a Unix socket.
# If used, DB_HOST and DB_PORT will be ignored.
# DB_SOCKET_PATH=/cloudsql/your-instance-connection-name

# [Optional] For 'mssql': Extra dialect options in JSON format.
# Example: {"options":{"encrypt":true,"trustServerCertificate":true}}
# DB_DIALECT_OPTIONS=

# [Recommended] Redis connection URL for cache optimization.
# Example: redis://user:password@hostname:port
REDIS_URL=redis://localhost:6379

# ===================================================================
# IV. WEBHOOK CONFIGURATION
# ===================================================================

# Webhook for logging when the bot is invited to or leaves a server.
WEBHOOK_GUILD_INVITE_LEAVE=

# Webhook for sending critical error logs.
WEBHOOK_ERROR_LOGS=

# ===================================================================
# V. ADDON CONFIGURATION
# ===================================================================

# -------------------------------------------------------------------
# V.A. AI ADDON
# -------------------------------------------------------------------

# [REQUIRED if AI Addon is active] Google Gemini API Key(s).
# Can be a single key or multiple keys separated by commas.
# Get yours from: https://aistudio.google.com/app/apikey
GEMINI_API_KEYS=your_api_key_1,your_api_key_2

# -------------------------------------------------------------------
# V.B. DASHBOARD ADDON
# -------------------------------------------------------------------

# [REQUIRED if Dashboard Addon is active] A long, random secret for signing session cookies.
# Generate one here: https://www.lastpass.com/features/password-generator
DASHBOARD_SESSION_SECRET=

# The port the web dashboard will run on.
DASHBOARD_PORT=3000

# [REQUIRED if using VoteLocked]
TOPGG_API_KEY=
TOPGG_AUTH_TOKEN=
WEBHOOK_VOTE_LOGS=

# -------------------------------------------------------------------
# V.C. MUSIC ADDON
# -------------------------------------------------------------------

# --- Lavalink Node(s) ---
# NOTE: All LAVALINK_* lists MUST have the same number of items.
# Example for 2 nodes:
# LAVALINK_HOSTS="localhost,lavalink.domain.com"
# LAVALINK_PORTS="2333,80"
# LAVALINK_PASSWORDS="youshallnotpass,anothersecret"
# LAVALINK_SECURES="false,true"
# [REQUIRED if Music Addon is active]
LAVALINK_HOSTS="localhost,lavalink.domain.com"
LAVALINK_PORTS="2333,80"
LAVALINK_PASSWORDS="youshallnotpass,anothersecret"
LAVALINK_SECURES="false,true"

# --- Spotify API ---
# [REQUIRED for Spotify features] Credentials from the Spotify Developer Dashboard.
# Get yours at: http://googleusercontent.com/spotify.com/3
SPOTIFY_CLIENT_ID=
SPOTIFY_CLIENT_SECRET=

# --- Audd.io API ---
# [REQUIRED if Music Addon is active] Audd.io API key for an alternative lyrics feature.
# Get yours at: https://audd.io/
AUDD_API_KEY=